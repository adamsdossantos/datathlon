services:
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - mongo
      - qdrant
    environment:
      - MONGO_URI=mongodb://root:root@mongo:27017
      # QDRANT_HOST: O nome do serviço é 'qdrant'
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      # MLflow
      - MLFLOW_TRACKING_URI=databricks
      - DATABRICKS_HOST=https://dbc-04ba26d3-c768.cloud.databricks.com/
      - DATABRICKS_TOKEN=**********************
      - MLFLOW_REGISTRY_URI=databricks-uc

  streamlit:
    build:
      context: .
      dockerfile: streamlit_app/Dockerfile
    ports:
      - "8501:8501"
    depends_on:
      - api
    environment:
      - API_BASE_URL=http://api:8000 # O Streamlit acessa a API usando o nome do serviço 'api'

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    volumes:
      - mongo-data:/data/db # Adicionar volume para persistir dados

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: '27017'
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: root
    depends_on:
      - mongo

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - qdrant-data:/qdrant/storage
      

volumes:
  mongo-data:
  qdrant-data: