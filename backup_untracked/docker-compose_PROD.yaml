services:
  mongo:
    image: mongo
    container_name: mongo-fiap
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - 'mongo-data:/data/db'
    networks:
      - fiap-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: '27017'
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: root
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - fiap-network

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant-fiap
    ports:
      - '6333:6333'
      - '6334:6334'
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - fiap-network
    

  api:
    container_name: api-fiap
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "8000:8000"
    networks:
      - fiap-network
    depends_on:
      mongo:
        condition: service_healthy
      qdrant:
        condition: service_started
      mlflow:
        condition: service_started

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio-fiap
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - fiap-network

  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: mlflow-fiap
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - MLFLOW_ARTIFACT_LOCATION=s3://mlflow-artifacts
    command: "mlflow ui --host 0.0.0.0 --port 5000"
    networks:
      - fiap-network
    depends_on:
      minio:
        condition: service_healthy

  streamlit:
    container_name: streamlit-fiap
    build:
      context: .
      dockerfile: streamlit_app/Dockerfile
    ports:
      - "8501:8501"
    networks:
      - fiap-network
    depends_on:
      api:
        condition: service_started

  livekit:
    container_name: livekit-fiap
    build:
      context: .
      dockerfile: livekit/Dockerfile
    ports:
      - "7880:7880"
    networks:
      - fiap-network
    depends_on:
      api:
        condition: service_started

volumes:
  mongo-data:
  qdrant-data:
  mlflow-data:
  minio-data:

networks:
  fiap-network:
