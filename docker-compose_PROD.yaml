services:
  mongo:
    image: mongo
    container_name: mongo-fiap
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - 'mongo-data:/data/db'
    networks:
      - fiap-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 256M
        reservations:
          cpus: :"0.1"
          memory: 256M
    labels:
      - kompose.service.type: "LoadBalancer"

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongo-tcp"
      ME_CONFIG_MONGODB_PORT: '27017'
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: root
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - fiap-network
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 256M
        reservations:
          cpus: :"0.1"
          memory: 256M
    labels:
      - kompose.service.type: "LoadBalancer"


  qdrant:
    image: qdrant/qdrant
    container_name: qdrant-fiap
    ports:
      - '6333:6333'
      - '6334:6334'
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - fiap-network
    

  api:
    container_name: api-fiap
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "8000:8000"
    networks:
      - fiap-network
    depends_on:
      mongo:
        condition: service_healthy
      qdrant:
        condition: service_started
      mlflow:
        condition: service_started

  streamlit:
    container_name: streamlit-fiap
    build:
      context: .
      dockerfile: streamlit_app/Dockerfile
    ports:
      - "8501:8501"
    networks:
      - fiap-network
    depends_on:
      api:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 512M
        reservations:
          cpus: :"0.1"
          memory: 256M
    labels:
      - kompose.service.type: "LoadBalancer"


  livekit:
    container_name: livekit-fiap
    build:
      context: .
      dockerfile: livekit/Dockerfile
    ports:
      - "7880:7880"
    networks:
      - fiap-network
    depends_on:
      api:
        condition: service_started

volumes:
  mongo-data:
  qdrant-data:
 

networks:
  fiap-network:
